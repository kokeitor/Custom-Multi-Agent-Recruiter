[INFO|agents|L155] 2024-06-30 13:24:40: Estado previo [Reviewer-Agent] : 
 {'candidato': Candidato(id='f55c238d-c1a2-4e35-b925-f367cefb5078', cv='Nombre: Ana García\nDirección: Calle del Sol 123, Ciudad del Campo\nCorreo: ana.garcia@ejemplo.com\nTeléfono: 555-321-9876\n\nEXPERIENCIA PROFESIONAL\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\n\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\n\nFORMACIÓN ACADÉMICA\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\n\nIDIOMAS\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\n\nHABILIDADES\n- Investigación histórica\n- Redacción académica\n- Enseñanza\n\nOtros datos\n- Publicación de artículos en revistas académicas\n- Participación en conferencias de historia\n', oferta='Recepcionista en Hotel de Lujo'), 'analisis': [Analisis(id='7f84658b-8d28-4e93-a29f-7f8fd631579f', candidato_id='f55c238d-c1a2-4e35-b925-f367cefb5078', fecha='2024-06-30 13:24:39', puntuacion=20, experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}], descripcion='El candidato no tiene experiencia laboral relacionada con el puesto de recepcionista en un hotel de lujo. Su experiencia profesional se centra en la enseñanza y la investigación histórica, lo que no se ajusta a los requisitos del puesto. Sin embargo, su nivel de inglés avanzado podría ser beneficioso en un entorno hotelero. En general, la falta de experiencia en el sector hotelero y la recepción hace que el candidato no sea idóneo para el puesto.', status='OK')], 'alucinacion_cv': 0, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|chains|L38] 2024-06-30 13:24:41: Initializing LangChain using : get_nvdia
[INFO|models|L50] 2024-06-30 13:24:41: Using NVIDIA : meta/llama3-70b-instruct
[INFO|agents|L165] 2024-06-30 13:24:41: Reviewer-Offer-Agent..
[INFO|agents|L186] 2024-06-30 13:24:41: Hallucination-Offer-Agent response  : 
 0
[INFO|agents|L197] 2024-06-30 13:24:41: Estado tras Reviewer-Agent : 
 0
[INFO|agents|L206] 2024-06-30 13:24:41: Análisis final : 
 id='7f84658b-8d28-4e93-a29f-7f8fd631579f' candidato_id='f55c238d-c1a2-4e35-b925-f367cefb5078' fecha='2024-06-30 13:24:39' puntuacion=20 experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}] descripcion='El candidato no tiene experiencia laboral relacionada con el puesto de recepcionista en un hotel de lujo. Su experiencia profesional se centra en la enseñanza y la investigación histórica, lo que no se ajusta a los requisitos del puesto. Sin embargo, su nivel de inglés avanzado podría ser beneficioso en un entorno hotelero. En general, la falta de experiencia en el sector hotelero y la recepción hace que el candidato no sea idóneo para el puesto.' status='OK'
[INFO|fast_api|L25] 2024-06-30 13:28:49: candidato=Candidato(id='24fa92b5-5902-4458-88e0-15126d326544', cv='Recepcionista en Hotel de Lujo', oferta='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\')
[INFO|fast_api|L28] 2024-06-30 13:28:49: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\backend\\..\\..\\config\\generation.json'
[INFO|modes|L249] 2024-06-30 13:28:49: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\backend\..\..\config\generation.json
[INFO|modes|L304] 2024-06-30 13:28:49: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000023295DCCC20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000023295DCCC20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000023295030680>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000023295DCCC20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|fast_api|L31] 2024-06-30 13:28:49: Graph mode using FAST-API
[INFO|fast_api|L32] 2024-06-30 13:28:49: Creating graph and compiling workflow...
[INFO|fast_api|L35] 2024-06-30 13:28:49: Graph and workflow created
[INFO|agents|L20] 2024-06-30 13:28:49: Estado previo [Analyzer-Agent] : 
 {'candidato': Candidato(id='24fa92b5-5902-4458-88e0-15126d326544', cv='Recepcionista en Hotel de Lujo', oferta='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\'), 'analisis': None, 'alucinacion_cv': None, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|agents|L23] 2024-06-30 13:28:49: Análisis del candidato : 
 candidato=Candidato(id='24fa92b5-5902-4458-88e0-15126d326544', cv='Recepcionista en Hotel de Lujo', oferta='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\')
[INFO|chains|L38] 2024-06-30 13:28:49: Initializing LangChain using : get_nvdia
[INFO|models|L50] 2024-06-30 13:28:49: Using NVIDIA : meta/llama3-70b-instruct
[INFO|agents|L97] 2024-06-30 13:28:52: Estado tras Analyzer-Agent : 
 {'candidato': Candidato(id='24fa92b5-5902-4458-88e0-15126d326544', cv='Recepcionista en Hotel de Lujo', oferta='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\'), 'analisis': [Analisis(id='50ea0cad-5aaf-44fa-abc0-b840091e9d61', candidato_id='24fa92b5-5902-4458-88e0-15126d326544', fecha='2024-06-30 13:28:52', puntuacion=20, experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}], descripcion='El candidato no tiene experiencia laboral relacionada con la oferta de trabajo de profesora de historia. Su experiencia como recepcionista en un hotel de lujo no es relevante para el puesto de profesora de historia. Sin embargo, es importante destacar que el candidato no tiene experiencia en la enseñanza o investigación histórica, lo que es fundamental para el puesto de profesora de historia.', status='OK')], 'alucinacion_cv': None, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|chains|L38] 2024-06-30 13:28:52: Initializing LangChain using : get_open_ai_json
[INFO|models|L34] 2024-06-30 13:28:52: Using Open AI : gpt-3.5-turbo
[INFO|agents|L115] 2024-06-30 13:28:53: Reviewer-Cv-Agent..
[INFO|_client|L1026] 2024-06-30 13:28:54: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[INFO|agents|L134] 2024-06-30 13:28:54: Hallucination-CV-Agent response : 
 0
[INFO|agents|L145] 2024-06-30 13:28:54: Estado tras Reviewer-Cv-Agent : 
 0
[INFO|agents|L155] 2024-06-30 13:28:54: Estado previo [Reviewer-Agent] : 
 {'candidato': Candidato(id='24fa92b5-5902-4458-88e0-15126d326544', cv='Recepcionista en Hotel de Lujo', oferta='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\'), 'analisis': [Analisis(id='50ea0cad-5aaf-44fa-abc0-b840091e9d61', candidato_id='24fa92b5-5902-4458-88e0-15126d326544', fecha='2024-06-30 13:28:52', puntuacion=20, experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}], descripcion='El candidato no tiene experiencia laboral relacionada con la oferta de trabajo de profesora de historia. Su experiencia como recepcionista en un hotel de lujo no es relevante para el puesto de profesora de historia. Sin embargo, es importante destacar que el candidato no tiene experiencia en la enseñanza o investigación histórica, lo que es fundamental para el puesto de profesora de historia.', status='OK')], 'alucinacion_cv': 0, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|chains|L38] 2024-06-30 13:28:54: Initializing LangChain using : get_nvdia
[INFO|models|L50] 2024-06-30 13:28:54: Using NVIDIA : meta/llama3-70b-instruct
[INFO|agents|L165] 2024-06-30 13:28:54: Reviewer-Offer-Agent..
[INFO|agents|L186] 2024-06-30 13:28:55: Hallucination-Offer-Agent response  : 
 0
[INFO|agents|L197] 2024-06-30 13:28:55: Estado tras Reviewer-Agent : 
 0
[INFO|agents|L206] 2024-06-30 13:28:55: Análisis final : 
 id='50ea0cad-5aaf-44fa-abc0-b840091e9d61' candidato_id='24fa92b5-5902-4458-88e0-15126d326544' fecha='2024-06-30 13:28:52' puntuacion=20 experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}] descripcion='El candidato no tiene experiencia laboral relacionada con la oferta de trabajo de profesora de historia. Su experiencia como recepcionista en un hotel de lujo no es relevante para el puesto de profesora de historia. Sin embargo, es importante destacar que el candidato no tiene experiencia en la enseñanza o investigación histórica, lo que es fundamental para el puesto de profesora de historia.' status='OK'
[INFO|fast_api|L25] 2024-06-30 13:30:33: candidato=Candidato(id='381e37c6-e88b-432a-9364-da7bfa373cba', cv='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\', oferta='Recepcionista en Hotel de Lujo')
[INFO|fast_api|L28] 2024-06-30 13:30:33: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\backend\\..\\..\\config\\generation.json'
[INFO|modes|L249] 2024-06-30 13:30:33: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\backend\..\..\config\generation.json
[INFO|modes|L304] 2024-06-30 13:30:33: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000023295DCCC20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000023295DCCC20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000023295030680>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000023295DCCC20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|fast_api|L31] 2024-06-30 13:30:33: Graph mode using FAST-API
[INFO|fast_api|L32] 2024-06-30 13:30:33: Creating graph and compiling workflow...
[INFO|fast_api|L35] 2024-06-30 13:30:33: Graph and workflow created
[INFO|agents|L20] 2024-06-30 13:30:33: Estado previo [Analyzer-Agent] : 
 {'candidato': Candidato(id='381e37c6-e88b-432a-9364-da7bfa373cba', cv='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\', oferta='Recepcionista en Hotel de Lujo'), 'analisis': None, 'alucinacion_cv': None, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|agents|L23] 2024-06-30 13:30:33: Análisis del candidato : 
 candidato=Candidato(id='381e37c6-e88b-432a-9364-da7bfa373cba', cv='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\', oferta='Recepcionista en Hotel de Lujo')
[INFO|chains|L38] 2024-06-30 13:30:33: Initializing LangChain using : get_nvdia
[INFO|models|L50] 2024-06-30 13:30:33: Using NVIDIA : meta/llama3-70b-instruct
[INFO|agents|L97] 2024-06-30 13:30:37: Estado tras Analyzer-Agent : 
 {'candidato': Candidato(id='381e37c6-e88b-432a-9364-da7bfa373cba', cv='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\', oferta='Recepcionista en Hotel de Lujo'), 'analisis': [Analisis(id='37aeb83d-ce58-4c11-b3d5-7cfcea9f36c0', candidato_id='381e37c6-e88b-432a-9364-da7bfa373cba', fecha='2024-06-30 13:30:37', puntuacion=20, experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}], descripcion='El candidato no tiene experiencia laboral relacionada con el puesto de recepcionista en un hotel de lujo. Su experiencia profesional se centra en la enseñanza y la investigación histórica, lo que no se ajusta a los requisitos del puesto. Aunque tiene habilidades en investigación y redacción, no hay evidencia de experiencia en atención al cliente, gestión de recepción o habilidades relacionadas con la industria hotelera.', status='OK')], 'alucinacion_cv': None, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|chains|L38] 2024-06-30 13:30:37: Initializing LangChain using : get_open_ai_json
[INFO|models|L34] 2024-06-30 13:30:37: Using Open AI : gpt-3.5-turbo
[INFO|agents|L115] 2024-06-30 13:30:38: Reviewer-Cv-Agent..
[INFO|_client|L1026] 2024-06-30 13:30:38: HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[INFO|agents|L134] 2024-06-30 13:30:38: Hallucination-CV-Agent response : 
 0
[INFO|agents|L145] 2024-06-30 13:30:38: Estado tras Reviewer-Cv-Agent : 
 0
[INFO|agents|L155] 2024-06-30 13:30:38: Estado previo [Reviewer-Agent] : 
 {'candidato': Candidato(id='381e37c6-e88b-432a-9364-da7bfa373cba', cv='Nombre: Ana García\\nDirección: Calle del Sol 123, Ciudad del Campo\\nCorreo: ana.garcia@ejemplo.com\\nTeléfono: 555-321-9876\\n\\nEXPERIENCIA PROFESIONAL\\n- Marzo 2019 / Presente: Profesora de Historia - Escuela Secundaria El Prado\\n  Enseñanza de historia mundial y local, preparación de material didáctico, evaluación de estudiantes.\\n\\n- Enero 2017 / Febrero 2019: Investigadora Histórica - Museo de Historia Nacional\\n  Investigación de eventos históricos, redacción de artículos académicos, colaboración en exposiciones.\\n\\nFORMACIÓN ACADÉMICA\\n- Finalizada en Diciembre 2016: Licenciatura en Historia, Universidad de Ciudad del Campo\\n\\nIDIOMAS\\n- Inglés: Avanzado (C1) en lectura, Avanzado (C1) en oral, Avanzado (C1) en escrita\\n- Español: Nativo (C2) en lectura, Nativo (C2) en oral, Nativo (C2) en escrita\\n\\nHABILIDADES\\n- Investigación histórica\\n- Redacción académica\\n- Enseñanza\\n\\nOtros datos\\n- Publicación de artículos en revistas académicas\\n- Participación en conferencias de historia\\', oferta='Recepcionista en Hotel de Lujo'), 'analisis': [Analisis(id='37aeb83d-ce58-4c11-b3d5-7cfcea9f36c0', candidato_id='381e37c6-e88b-432a-9364-da7bfa373cba', fecha='2024-06-30 13:30:37', puntuacion=20, experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}], descripcion='El candidato no tiene experiencia laboral relacionada con el puesto de recepcionista en un hotel de lujo. Su experiencia profesional se centra en la enseñanza y la investigación histórica, lo que no se ajusta a los requisitos del puesto. Aunque tiene habilidades en investigación y redacción, no hay evidencia de experiencia en atención al cliente, gestión de recepción o habilidades relacionadas con la industria hotelera.', status='OK')], 'alucinacion_cv': 0, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|chains|L38] 2024-06-30 13:30:38: Initializing LangChain using : get_nvdia
[INFO|models|L50] 2024-06-30 13:30:38: Using NVIDIA : meta/llama3-70b-instruct
[INFO|agents|L165] 2024-06-30 13:30:38: Reviewer-Offer-Agent..
[INFO|agents|L186] 2024-06-30 13:30:39: Hallucination-Offer-Agent response  : 
 0
[INFO|agents|L197] 2024-06-30 13:30:39: Estado tras Reviewer-Agent : 
 0
[INFO|agents|L206] 2024-06-30 13:30:39: Análisis final : 
 id='37aeb83d-ce58-4c11-b3d5-7cfcea9f36c0' candidato_id='381e37c6-e88b-432a-9364-da7bfa373cba' fecha='2024-06-30 13:30:37' puntuacion=20 experiencias=[{'experiencia': 'no tiene', 'puesto': '', 'empresa': '', 'duracion': ''}] descripcion='El candidato no tiene experiencia laboral relacionada con el puesto de recepcionista en un hotel de lujo. Su experiencia profesional se centra en la enseñanza y la investigación histórica, lo que no se ajusta a los requisitos del puesto. Aunque tiene habilidades en investigación y redacción, no hay evidencia de experiencia en atención al cliente, gestión de recepción o habilidades relacionadas con la industria hotelera.' status='OK'
[INFO|streamlit|L29] 2024-06-30 13:53:05: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 13:53:05: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 13:53:05: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 13:53:05: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 13:53:06: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 13:53:06: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x000002394FC477E0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='GEMINI', get_model=<function get_gemini_pro at 0x0000023951AB98A0>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='\n                Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                Análisis del candidato: \n\n{analisis}\n\n\n\n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n                '))}
[WARNING|chatbot|L205] 2024-06-30 13:53:07: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L207] 2024-06-30 13:53:07: After change Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[INFO|chatbot|L210] 2024-06-30 13:53:07: Creating graph and compiling workflow...
[INFO|chatbot|L214] 2024-06-30 13:53:08: Graph and workflow created
[INFO|streamlit|L29] 2024-06-30 13:53:13: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 13:53:13: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 13:53:13: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 13:53:13: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 13:53:14: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 13:53:14: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x000002394FC477E0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='GEMINI', get_model=<function get_gemini_pro at 0x0000023951AB98A0>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='\n                Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                Análisis del candidato: \n\n{analisis}\n\n\n\n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n                '))}
[WARNING|chatbot|L189] 2024-06-30 13:53:14: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L191] 2024-06-30 13:53:14: After change Analyzer Agent(agent_name='analyzer', model='OPENAI', get_model=<function get_open_ai_json at 0x000002394FC477E0>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L194] 2024-06-30 13:53:14: Creating graph and compiling workflow...
[INFO|chatbot|L198] 2024-06-30 13:53:15: Graph and workflow created
[INFO|streamlit|L29] 2024-06-30 13:53:18: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 13:53:18: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 13:53:18: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 13:53:18: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 13:53:20: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 13:53:20: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x00000239516639C0>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x000002394FC477E0>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='GEMINI', get_model=<function get_gemini_pro at 0x0000023951AB98A0>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='\n                Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                Análisis del candidato: \n\n{analisis}\n\n\n\n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n                '))}
[INFO|streamlit|L29] 2024-06-30 13:59:23: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 13:59:23: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 13:59:23: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 13:59:23: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 13:59:25: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 13:59:25: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x000001AAAAE7F060>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='GEMINI', get_model=<function get_gemini_pro at 0x000001AAACC5CE00>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='\n                Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                Análisis del candidato: \n\n{analisis}\n\n\n\n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n                '))}
[WARNING|chatbot|L205] 2024-06-30 13:59:26: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L207] 2024-06-30 13:59:26: After change Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[INFO|chatbot|L210] 2024-06-30 13:59:26: Creating graph and compiling workflow...
[INFO|chatbot|L214] 2024-06-30 13:59:27: Graph and workflow created
[INFO|utils|L22] 2024-06-30 14:01:11: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 14:01:11: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 14:01:11: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 14:01:11: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 14:01:11: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|utils|L22] 2024-06-30 14:01:12: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 14:01:12: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 14:01:12: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 14:01:12: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 14:01:12: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 14:01:13: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 14:01:13: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x000001AAAAE7F060>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='GEMINI', get_model=<function get_gemini_pro at 0x000001AAACC5CE00>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='\n                Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                Análisis del candidato: \n\n{analisis}\n\n\n\n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n                '))}
[INFO|modes|L249] 2024-06-30 14:01:14: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 14:01:14: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x000001AAAAE7F060>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='GEMINI', get_model=<function get_gemini_pro at 0x000001AAACC5CE00>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='\n                Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                Análisis del candidato: \n\n{analisis}\n\n\n\n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n                '))}
[WARNING|chatbot|L221] 2024-06-30 14:01:14: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x000001AAAAE7EF20>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L223] 2024-06-30 14:01:14: After change Analyzer Agent(agent_name='analyzer', model='GEMINI', get_model=<function get_gemini_pro at 0x000001AAACC5CE00>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L226] 2024-06-30 14:01:14: Creating graph and compiling workflow...
[INFO|chatbot|L230] 2024-06-30 14:01:14: Graph and workflow created
[INFO|utils|L22] 2024-06-30 14:01:15: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 14:01:15: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 14:01:15: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 14:01:15: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 14:01:15: Secrets BBDD path : FILE_NAME='.secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 14:01:17: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
