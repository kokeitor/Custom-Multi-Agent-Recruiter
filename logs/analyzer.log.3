[INFO|chains|L38] 2024-06-30 16:26:24: Initializing LangChain using : get_gemini_pro
[WARNING|_metadata|L139] 2024-06-30 16:26:24: Compute Engine Metadata server unavailable on attempt 1 of 3. Reason: [WinError 10051] Se ha intentado una operación de socket en una red no accesible
[WARNING|_metadata|L139] 2024-06-30 16:26:24: Compute Engine Metadata server unavailable on attempt 2 of 3. Reason: [WinError 10051] Se ha intentado una operación de socket en una red no accesible
[WARNING|_metadata|L139] 2024-06-30 16:26:24: Compute Engine Metadata server unavailable on attempt 3 of 3. Reason: [WinError 10051] Se ha intentado una operación de socket en una red no accesible
[WARNING|_default|L338] 2024-06-30 16:26:24: Authentication failed using Compute Engine authentication due to unavailable metadata server.
[INFO|streamlit|L29] 2024-06-30 16:40:35: Streamlit app mode
[INFO|utils|L22] 2024-06-30 16:40:35: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:40:35: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:35: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|utils|L22] 2024-06-30 16:40:35: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L32] 2024-06-30 16:40:35: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|utils|L22] 2024-06-30 16:40:35: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|chatbot|L43] 2024-06-30 16:40:35: Image path : IMAGES_PATH='data\\images'
[INFO|streamlit|L29] 2024-06-30 16:40:35: Streamlit app mode
[INFO|chatbot|L44] 2024-06-30 16:40:35: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|chatbot|L43] 2024-06-30 16:40:35: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:35: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|streamlit|L32] 2024-06-30 16:40:35: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|streamlit|L29] 2024-06-30 16:40:35: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:35: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:40:35: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:35: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|chatbot|L43] 2024-06-30 16:40:35: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:35: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 16:40:38: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:38: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|modes|L249] 2024-06-30 16:40:38: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L249] 2024-06-30 16:40:38: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:38: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|modes|L304] 2024-06-30 16:40:38: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[WARNING|chatbot|L222] 2024-06-30 16:40:38: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L224] 2024-06-30 16:40:38: After change Analyzer Agent(agent_name='analyzer', model='GEMINI', get_model=<function get_gemini_pro at 0x0000029B56CE8680>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L227] 2024-06-30 16:40:38: Creating graph and compiling workflow...
[WARNING|chatbot|L189] 2024-06-30 16:40:38: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L191] 2024-06-30 16:40:38: After change Analyzer Agent(agent_name='analyzer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L194] 2024-06-30 16:40:38: Creating graph and compiling workflow...
[INFO|modes|L249] 2024-06-30 16:40:38: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:38: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[WARNING|chatbot|L189] 2024-06-30 16:40:38: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L191] 2024-06-30 16:40:38: After change Analyzer Agent(agent_name='analyzer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L194] 2024-06-30 16:40:38: Creating graph and compiling workflow...
[INFO|chatbot|L231] 2024-06-30 16:40:38: Graph and workflow created
[INFO|chatbot|L198] 2024-06-30 16:40:38: Graph and workflow created
[INFO|chatbot|L198] 2024-06-30 16:40:38: Graph and workflow created
[WARNING|chatbot|L189] 2024-06-30 16:40:41: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L191] 2024-06-30 16:40:41: After change Analyzer Agent(agent_name='analyzer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L194] 2024-06-30 16:40:41: Creating graph and compiling workflow...
[INFO|chatbot|L198] 2024-06-30 16:40:42: Graph and workflow created
[INFO|utils|L22] 2024-06-30 16:40:47: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:40:47: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:47: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:40:47: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:47: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 16:40:48: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:48: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[WARNING|chatbot|L222] 2024-06-30 16:40:48: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L224] 2024-06-30 16:40:48: After change Analyzer Agent(agent_name='analyzer', model='GEMINI', get_model=<function get_gemini_pro at 0x0000029B56CE8680>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L227] 2024-06-30 16:40:48: Creating graph and compiling workflow...
[INFO|chatbot|L231] 2024-06-30 16:40:48: Graph and workflow created
[INFO|utils|L22] 2024-06-30 16:40:49: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:40:49: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:49: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:40:49: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:49: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|utils|L22] 2024-06-30 16:40:50: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:40:50: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:50: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:40:50: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:50: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|utils|L22] 2024-06-30 16:40:50: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:40:50: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:50: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:40:50: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:50: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|utils|L22] 2024-06-30 16:40:50: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:40:50: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:40:50: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:40:50: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:40:50: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 16:40:51: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:51: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|modes|L249] 2024-06-30 16:40:51: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:51: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|modes|L249] 2024-06-30 16:40:51: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:51: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[INFO|modes|L249] 2024-06-30 16:40:52: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
[INFO|modes|L304] 2024-06-30 16:40:52: Graph Agents : {'analyzer': Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 're_analyzer': Agent(agent_name='re_analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis_previo', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para corregir un análisis erróneo de un candidato para un puesto de trabajo específico. \n            Tu función es volver a analizar el CV del candidato y corregir el análisis erróneo previo.\n\n            Debes proporcionar una salida en formato JSON que contenga:\n\n            1. La nueva puntuación corregida.\n            2. Un listado corregido con las experiencias del candidato solo si están realmente relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n            3. Una nueva descripción corregida de por qué el candidato obtuvo la puntuación dada.\n\n            No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n            Como salida, debes proporcionar un JSON con la siguiente estructura:\n\n            [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n            <|eot_id|><|start_header_id|>user<|end_header_id|>\n            Título de la oferta de trabajo: {oferta}\n            CV del candidato: {cv}\n            Análisis erróneo del candidato: {analisis_previo}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                ')), 'cv_reviewer': Agent(agent_name='cv_reviewer', model='OPENAI', get_model=<function get_open_ai_json at 0x0000029B56B3B920>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'experiencias'], template='\n                Eres un modelo de IA diseñado para analizar y detectar que la información contenida en las experiencias de trabajo de un candidato se aparecen tambien en su cv.\n                Debes puntuar con un 1 si las experiencias de trabajo no aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si en las las experiencias de trabajo aparece -> experiencia : \'no tiene\'\n\n                Debes puntuar con un 0 si las experiencias de trabajo aparecen en el cv del candidato.\n\n                Debes puntuar con un 0 si no hay experiencias de trabajo.\n\n                El formato de salida debe ser en formato JSON con una unica clave "puntuacion"\n\n                Basate en la siguiente información proporcionada para dar esta puntuación de alucinación: \n\n                cv del candidato: \n\n{cv}\n\n\n                Experiencias de trabajo del candidato: \n\n{experiencias}\n\n\n                ')), 'offer_reviewer': Agent(agent_name='offer_reviewer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['analisis', 'cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para analizar las posibles alucinaciones de otro modelo al realizar un análisis sobre un CV de un candidato para una oferta de trabajo.\n                Puntúa con un 1 si no es correcto, no tiene sentido o no es preciso el análisis realizado [hay alucinación por parte del modelo]\n                y con un 0 si es correcto el análisis, es preciso y se ajusta a la oferta [no hay alucinación por parte del modelo].\n\n\n                El modelo SÍ ha sufrido una alucinación si:\n\n                1. Las experiencias incluidas en el análisis no tienen relación con la oferta de empleo.\n\n                2. En la descripción se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es elevada y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n\n                El modelo NO ha sufrido una alucinación si:\n\n                1. No hay experiencias incluidas en el análisis y en su CV las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                2. En la descripción no se mencionan habilidades del candidato que no tienen relación con la oferta de empleo.\n\n                3. La puntuación es baja y las experiencias del candidato no tienen relación con la oferta de empleo.\n\n                \n                El formato de salida debe ser en formato JSON con una unica clave "alucinacion"\n\n\n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}\n                Análisis del candidato: {analisis}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))}
[WARNING|chatbot|L222] 2024-06-30 16:40:52: Previous Analyzer Agent(agent_name='analyzer', model='NVIDIA', get_model=<function get_nvdia at 0x0000029B56CA5940>, temperature=0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='<|begin_of_text|><|start_header_id|>system<|end_header_id|>Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tus tareas son:\n\n                1. Asignar una puntuación al candidato.\n\n                2. Localizar en el CV todas las experiencias laborales, junto con el puesto, la empresa y la duracion.\n\n                3. Crear una descripción de por qué el candidato obtuvo la puntuación dada.\n\n                \n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n                No debes inventarte nada, si no encuentras experiencias de trabajo asociadas a la oferta en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ]\n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                \n                <|eot_id|><|start_header_id|>user<|end_header_id|>\n                Título de la oferta de trabajo: {oferta}\n                CV del candidato: {cv}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n                '))
[WARNING|chatbot|L224] 2024-06-30 16:40:52: After change Analyzer Agent(agent_name='analyzer', model='GEMINI', get_model=<function get_gemini_pro at 0x0000029B56CE8680>, temperature=0.0, prompt=PromptTemplate(input_variables=['cv', 'oferta'], template='Eres un modelo de IA diseñado para evaluar la idoneidad de un candidato para un puesto de trabajo específico asignando una puntuación. Recibirás el título de una oferta de trabajo y un CV completo de un candidato. \n                Tu tarea es proporcionar una salida en formato JSON que contenga:\n\n                1. La puntuación.\n\n                2. Un listado con las experiencias del candidato solo si están relacionadas con la oferta propuesta, junto con la información de esa experiencia si se encuentra en el CV, como son: Puesto, Empresa y Duración.\n\n                3. Una descripción de por qué el candidato obtuvo la puntuación dada.\n\n\n                Como salida, debes proporcionar un JSON con la siguiente estructura: [ "puntuacion": 0-100 , "experiencias" : [ ["experiencia": "","puesto": "", "empresa": "","duracion": ""] ], "descripcion": "" ]\n\n\n                Debes ser preciso con la puntuación dada al candidato en función de su experiencia profesional y la relación real con la oferta de trabajo.\n\n                No debes inventarte nada, si no encuentras información suficiente en el CV del candidato indica -> "experiencias" : [ ["experiencia": "no tiene","puesto": "", "empresa": "","duracion": ""] ] \n\n                No debes incluir en las experiencias de trabajo experiencias del candidato que no estén relacionadas con la oferta de empleo.\n\n                Si el CV del candidato no está relacionado con la oferta de empleo y tampoco tiene experiencia previa relacionada con la oferta de trabajo:\n\n                a. La puntuación debe ser baja.\n\n                b. La descripción de por qué se le ha dado esa puntuación debe ser desfavorable.\n\n                \n                Este es el CV del candidato a analizar y la oferta de trabajo:\n\n                Título de la oferta de trabajo: \n\n{oferta}\n\n\n                CV del candidato: \n\n{cv}\n\n\n                '))
[INFO|chatbot|L227] 2024-06-30 16:40:52: Creating graph and compiling workflow...
[INFO|chatbot|L231] 2024-06-30 16:40:52: Graph and workflow created
[INFO|chatbot|L76] 2024-06-30 16:40:52: Candidato a analizar [Recibido del front end]:  Información Personal:  Nombre: Juan Pérez Teléfono: +1234567890 Correo Electrónico: juan.perez@email.com Ubicación: Ciudad de México, México Objetivo Profesional: Busco aplicar mis habilidades en desarrollo web para contribuir al crecimiento y éxito de una empresa innovadora en tecnología.  Experiencia Laboral:  Desarrollador Web | Empresa A Ciudad de México, México Marzo 2018 - Presente  Desarrollo y mantenimiento de aplicaciones web utilizando tecnologías modernas como HTML5, CSS3, JavaScript, y frameworks como React y Vue.js. Colaboración con equipos multidisciplinarios para el diseño e implementación de soluciones escalables y eficientes. Participación en el ciclo completo de desarrollo de software, desde el análisis de requisitos hasta la implementación y pruebas. Educación:  Licenciatura en Ingeniería en Sistemas Computacionales Universidad Nacional Autónoma de México (UNAM) Septiembre 2014 - Mayo 2018  Especialización en desarrollo de software y sistemas distribuidos. Proyecto de tesis sobre optimizaci - Enfermera en Clínica Privada
[INFO|chatbot|L83] 2024-06-30 16:40:52: Candidato a analizar :  id='6a54d30e-8c2c-4d8a-85df-ad18b9683fa6' cv='Información Personal:  Nombre: Juan Pérez Teléfono: +1234567890 Correo Electrónico: juan.perez@email.com Ubicación: Ciudad de México, México Objetivo Profesional: Busco aplicar mis habilidades en desarrollo web para contribuir al crecimiento y éxito de una empresa innovadora en tecnología.  Experiencia Laboral:  Desarrollador Web | Empresa A Ciudad de México, México Marzo 2018 - Presente  Desarrollo y mantenimiento de aplicaciones web utilizando tecnologías modernas como HTML5, CSS3, JavaScript, y frameworks como React y Vue.js. Colaboración con equipos multidisciplinarios para el diseño e implementación de soluciones escalables y eficientes. Participación en el ciclo completo de desarrollo de software, desde el análisis de requisitos hasta la implementación y pruebas. Educación:  Licenciatura en Ingeniería en Sistemas Computacionales Universidad Nacional Autónoma de México (UNAM) Septiembre 2014 - Mayo 2018  Especialización en desarrollo de software y sistemas distribuidos. Proyecto de tesis sobre optimizaci' oferta='Enfermera en Clínica Privada'
[INFO|agents|L20] 2024-06-30 16:40:52: Estado previo [Analyzer-Agent] : 
 {'candidato': Candidato(id='6a54d30e-8c2c-4d8a-85df-ad18b9683fa6', cv='Información Personal:  Nombre: Juan Pérez Teléfono: +1234567890 Correo Electrónico: juan.perez@email.com Ubicación: Ciudad de México, México Objetivo Profesional: Busco aplicar mis habilidades en desarrollo web para contribuir al crecimiento y éxito de una empresa innovadora en tecnología.  Experiencia Laboral:  Desarrollador Web | Empresa A Ciudad de México, México Marzo 2018 - Presente  Desarrollo y mantenimiento de aplicaciones web utilizando tecnologías modernas como HTML5, CSS3, JavaScript, y frameworks como React y Vue.js. Colaboración con equipos multidisciplinarios para el diseño e implementación de soluciones escalables y eficientes. Participación en el ciclo completo de desarrollo de software, desde el análisis de requisitos hasta la implementación y pruebas. Educación:  Licenciatura en Ingeniería en Sistemas Computacionales Universidad Nacional Autónoma de México (UNAM) Septiembre 2014 - Mayo 2018  Especialización en desarrollo de software y sistemas distribuidos. Proyecto de tesis sobre optimizaci', oferta='Enfermera en Clínica Privada'), 'analisis': None, 'alucinacion_cv': None, 'alucinacion_oferta': None, 'analisis_final': None}
[INFO|agents|L23] 2024-06-30 16:40:52: Análisis del candidato : 
 candidato=Candidato(id='6a54d30e-8c2c-4d8a-85df-ad18b9683fa6', cv='Información Personal:  Nombre: Juan Pérez Teléfono: +1234567890 Correo Electrónico: juan.perez@email.com Ubicación: Ciudad de México, México Objetivo Profesional: Busco aplicar mis habilidades en desarrollo web para contribuir al crecimiento y éxito de una empresa innovadora en tecnología.  Experiencia Laboral:  Desarrollador Web | Empresa A Ciudad de México, México Marzo 2018 - Presente  Desarrollo y mantenimiento de aplicaciones web utilizando tecnologías modernas como HTML5, CSS3, JavaScript, y frameworks como React y Vue.js. Colaboración con equipos multidisciplinarios para el diseño e implementación de soluciones escalables y eficientes. Participación en el ciclo completo de desarrollo de software, desde el análisis de requisitos hasta la implementación y pruebas. Educación:  Licenciatura en Ingeniería en Sistemas Computacionales Universidad Nacional Autónoma de México (UNAM) Septiembre 2014 - Mayo 2018  Especialización en desarrollo de software y sistemas distribuidos. Proyecto de tesis sobre optimizaci', oferta='Enfermera en Clínica Privada')
[INFO|chains|L38] 2024-06-30 16:40:52: Initializing LangChain using : get_gemini_pro
[WARNING|_metadata|L139] 2024-06-30 16:40:52: Compute Engine Metadata server unavailable on attempt 1 of 3. Reason: [WinError 10051] Se ha intentado una operación de socket en una red no accesible
[WARNING|_metadata|L139] 2024-06-30 16:40:52: Compute Engine Metadata server unavailable on attempt 2 of 3. Reason: [WinError 10051] Se ha intentado una operación de socket en una red no accesible
[WARNING|_metadata|L139] 2024-06-30 16:40:52: Compute Engine Metadata server unavailable on attempt 3 of 3. Reason: [WinError 10051] Se ha intentado una operación de socket en una red no accesible
[WARNING|_default|L338] 2024-06-30 16:40:52: Authentication failed using Compute Engine authentication due to unavailable metadata server.
[INFO|utils|L22] 2024-06-30 16:44:21: CONFIG_LOGGER_FILE -> C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\model\..\..\config\logger.json
[INFO|streamlit|L29] 2024-06-30 16:44:21: Streamlit app mode
[INFO|streamlit|L32] 2024-06-30 16:44:21: CONFIG_PATH='C:\\Users\\Jorge\\Desktop\\MULTI_AGENT_RECRUITER\\src\\..\\config\\generation.json'
[INFO|chatbot|L43] 2024-06-30 16:44:21: Image path : IMAGES_PATH='data\\images'
[INFO|chatbot|L44] 2024-06-30 16:44:21: Secrets BBDD path : GOOGLE_SECRETS_FILE_NAME='etc\\secrets\\recruiter-427908-67769637005a.json'
[INFO|modes|L249] 2024-06-30 16:44:23: Definida configuracion mediante archivo JSON en C:\Users\Jorge\Desktop\MULTI_AGENT_RECRUITER\src\..\config\generation.json
